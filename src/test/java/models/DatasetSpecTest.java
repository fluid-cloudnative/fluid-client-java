/*
 * fluid
 * client for fluid
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import models.CacheableNodeAffinity;
import models.DataRestoreLocation;
import models.EncryptOption;
import models.Mount;
import models.Runtime;
import models.User;
import models.V1Toleration;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DatasetSpec
 */
public class DatasetSpecTest {
    private final DatasetSpec model = new DatasetSpec();

    /**
     * Model tests for DatasetSpec
     */
    @Test
    public void testDatasetSpec() {
        // TODO: test DatasetSpec
    }

    /**
     * Test the property 'accessModes'
     */
    @Test
    public void accessModesTest() {
        // TODO: test accessModes
    }

    /**
     * Test the property 'dataRestoreLocation'
     */
    @Test
    public void dataRestoreLocationTest() {
        // TODO: test dataRestoreLocation
    }

    /**
     * Test the property 'mounts'
     */
    @Test
    public void mountsTest() {
        // TODO: test mounts
    }

    /**
     * Test the property 'nodeAffinity'
     */
    @Test
    public void nodeAffinityTest() {
        // TODO: test nodeAffinity
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'placement'
     */
    @Test
    public void placementTest() {
        // TODO: test placement
    }

    /**
     * Test the property 'runtimes'
     */
    @Test
    public void runtimesTest() {
        // TODO: test runtimes
    }

    /**
     * Test the property 'sharedEncryptOptions'
     */
    @Test
    public void sharedEncryptOptionsTest() {
        // TODO: test sharedEncryptOptions
    }

    /**
     * Test the property 'sharedOptions'
     */
    @Test
    public void sharedOptionsTest() {
        // TODO: test sharedOptions
    }

    /**
     * Test the property 'tolerations'
     */
    @Test
    public void tolerationsTest() {
        // TODO: test tolerations
    }

}

/*
 * fluid
 * client for fluid
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import models.V1AWSElasticBlockStoreVolumeSource;
import models.V1AzureDiskVolumeSource;
import models.V1AzureFileVolumeSource;
import models.V1CSIVolumeSource;
import models.V1CephFSVolumeSource;
import models.V1CinderVolumeSource;
import models.V1ConfigMapVolumeSource;
import models.V1DownwardAPIVolumeSource;
import models.V1EmptyDirVolumeSource;
import models.V1EphemeralVolumeSource;
import models.V1FCVolumeSource;
import models.V1FlexVolumeSource;
import models.V1FlockerVolumeSource;
import models.V1GCEPersistentDiskVolumeSource;
import models.V1GitRepoVolumeSource;
import models.V1GlusterfsVolumeSource;
import models.V1HostPathVolumeSource;
import models.V1ISCSIVolumeSource;
import models.V1NFSVolumeSource;
import models.V1PersistentVolumeClaimVolumeSource;
import models.V1PhotonPersistentDiskVolumeSource;
import models.V1PortworxVolumeSource;
import models.V1ProjectedVolumeSource;
import models.V1QuobyteVolumeSource;
import models.V1RBDVolumeSource;
import models.V1ScaleIOVolumeSource;
import models.V1SecretVolumeSource;
import models.V1StorageOSVolumeSource;
import models.V1VsphereVirtualDiskVolumeSource;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VolumeSource
 */
public class VolumeSourceTest {
    private final VolumeSource model = new VolumeSource();

    /**
     * Model tests for VolumeSource
     */
    @Test
    public void testVolumeSource() {
        // TODO: test VolumeSource
    }

    /**
     * Test the property 'awsElasticBlockStore'
     */
    @Test
    public void awsElasticBlockStoreTest() {
        // TODO: test awsElasticBlockStore
    }

    /**
     * Test the property 'azureDisk'
     */
    @Test
    public void azureDiskTest() {
        // TODO: test azureDisk
    }

    /**
     * Test the property 'azureFile'
     */
    @Test
    public void azureFileTest() {
        // TODO: test azureFile
    }

    /**
     * Test the property 'cephfs'
     */
    @Test
    public void cephfsTest() {
        // TODO: test cephfs
    }

    /**
     * Test the property 'cinder'
     */
    @Test
    public void cinderTest() {
        // TODO: test cinder
    }

    /**
     * Test the property 'configMap'
     */
    @Test
    public void configMapTest() {
        // TODO: test configMap
    }

    /**
     * Test the property 'csi'
     */
    @Test
    public void csiTest() {
        // TODO: test csi
    }

    /**
     * Test the property 'downwardAPI'
     */
    @Test
    public void downwardAPITest() {
        // TODO: test downwardAPI
    }

    /**
     * Test the property 'emptyDir'
     */
    @Test
    public void emptyDirTest() {
        // TODO: test emptyDir
    }

    /**
     * Test the property 'ephemeral'
     */
    @Test
    public void ephemeralTest() {
        // TODO: test ephemeral
    }

    /**
     * Test the property 'fc'
     */
    @Test
    public void fcTest() {
        // TODO: test fc
    }

    /**
     * Test the property 'flexVolume'
     */
    @Test
    public void flexVolumeTest() {
        // TODO: test flexVolume
    }

    /**
     * Test the property 'flocker'
     */
    @Test
    public void flockerTest() {
        // TODO: test flocker
    }

    /**
     * Test the property 'gcePersistentDisk'
     */
    @Test
    public void gcePersistentDiskTest() {
        // TODO: test gcePersistentDisk
    }

    /**
     * Test the property 'gitRepo'
     */
    @Test
    public void gitRepoTest() {
        // TODO: test gitRepo
    }

    /**
     * Test the property 'glusterfs'
     */
    @Test
    public void glusterfsTest() {
        // TODO: test glusterfs
    }

    /**
     * Test the property 'hostPath'
     */
    @Test
    public void hostPathTest() {
        // TODO: test hostPath
    }

    /**
     * Test the property 'iscsi'
     */
    @Test
    public void iscsiTest() {
        // TODO: test iscsi
    }

    /**
     * Test the property 'nfs'
     */
    @Test
    public void nfsTest() {
        // TODO: test nfs
    }

    /**
     * Test the property 'persistentVolumeClaim'
     */
    @Test
    public void persistentVolumeClaimTest() {
        // TODO: test persistentVolumeClaim
    }

    /**
     * Test the property 'photonPersistentDisk'
     */
    @Test
    public void photonPersistentDiskTest() {
        // TODO: test photonPersistentDisk
    }

    /**
     * Test the property 'portworxVolume'
     */
    @Test
    public void portworxVolumeTest() {
        // TODO: test portworxVolume
    }

    /**
     * Test the property 'projected'
     */
    @Test
    public void projectedTest() {
        // TODO: test projected
    }

    /**
     * Test the property 'quobyte'
     */
    @Test
    public void quobyteTest() {
        // TODO: test quobyte
    }

    /**
     * Test the property 'rbd'
     */
    @Test
    public void rbdTest() {
        // TODO: test rbd
    }

    /**
     * Test the property 'scaleIO'
     */
    @Test
    public void scaleIOTest() {
        // TODO: test scaleIO
    }

    /**
     * Test the property 'secret'
     */
    @Test
    public void secretTest() {
        // TODO: test secret
    }

    /**
     * Test the property 'storageos'
     */
    @Test
    public void storageosTest() {
        // TODO: test storageos
    }

    /**
     * Test the property 'vsphereVolume'
     */
    @Test
    public void vsphereVolumeTest() {
        // TODO: test vsphereVolume
    }

}

/*
 * fluid
 * Python SDK for fluid
 *
 * OpenAPI spec version: v0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.fluid_cloudnative.fluid;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * Mount describes a mounting. &lt;br&gt; Refer to &lt;a href&#x3D;\&quot;https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\&quot;&gt;Alluxio Storage Integrations&lt;/a&gt; for more info
 */
@ApiModel(description = "Mount describes a mounting. <br> Refer to <a href=\"https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\">Alluxio Storage Integrations</a> for more info")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-14T16:48:53.494+08:00")
public class Mount {
  @SerializedName("encryptOptions")
  private List<EncryptOption> encryptOptions = null;

  @SerializedName("mountPoint")
  private String mountPoint = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("options")
  private Map<String, String> options = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("readOnly")
  private Boolean readOnly = null;

  @SerializedName("shared")
  private Boolean shared = null;

  public Mount encryptOptions(List<EncryptOption> encryptOptions) {
    this.encryptOptions = encryptOptions;
    return this;
  }

  public Mount addEncryptOptionsItem(EncryptOption encryptOptionsItem) {
    if (this.encryptOptions == null) {
      this.encryptOptions = new ArrayList<EncryptOption>();
    }
    this.encryptOptions.add(encryptOptionsItem);
    return this;
  }

   /**
   * The secret information
   * @return encryptOptions
  **/
  @ApiModelProperty(value = "The secret information")
  public List<EncryptOption> getEncryptOptions() {
    return encryptOptions;
  }

  public void setEncryptOptions(List<EncryptOption> encryptOptions) {
    this.encryptOptions = encryptOptions;
  }

  public Mount mountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
    return this;
  }

   /**
   * MountPoint is the mount point of source.
   * @return mountPoint
  **/
  @ApiModelProperty(value = "MountPoint is the mount point of source.")
  public String getMountPoint() {
    return mountPoint;
  }

  public void setMountPoint(String mountPoint) {
    this.mountPoint = mountPoint;
  }

  public Mount name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of mount
   * @return name
  **/
  @ApiModelProperty(value = "The name of mount")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Mount options(Map<String, String> options) {
    this.options = options;
    return this;
  }

  public Mount putOptionsItem(String key, String optionsItem) {
    if (this.options == null) {
      this.options = new HashMap<String, String>();
    }
    this.options.put(key, optionsItem);
    return this;
  }

   /**
   * The Mount Options. &lt;br&gt; Refer to &lt;a href&#x3D;\&quot;https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html\&quot;&gt;Mount Options&lt;/a&gt;.  &lt;br&gt; The option has Prefix &#39;fs.&#39; And you can Learn more from &lt;a href&#x3D;\&quot;https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\&quot;&gt;The Storage Integrations&lt;/a&gt;
   * @return options
  **/
  @ApiModelProperty(value = "The Mount Options. <br> Refer to <a href=\"https://docs.alluxio.io/os/user/stable/en/reference/Properties-List.html\">Mount Options</a>.  <br> The option has Prefix 'fs.' And you can Learn more from <a href=\"https://docs.alluxio.io/os/user/stable/en/ufs/S3.html\">The Storage Integrations</a>")
  public Map<String, String> getOptions() {
    return options;
  }

  public void setOptions(Map<String, String> options) {
    this.options = options;
  }

  public Mount path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The path of mount, if not set will be /{Name}
   * @return path
  **/
  @ApiModelProperty(value = "The path of mount, if not set will be /{Name}")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public Mount readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

   /**
   * Optional: Defaults to false (read-write).
   * @return readOnly
  **/
  @ApiModelProperty(value = "Optional: Defaults to false (read-write).")
  public Boolean isReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public Mount shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Optional: Defaults to false (shared).
   * @return shared
  **/
  @ApiModelProperty(value = "Optional: Defaults to false (shared).")
  public Boolean isShared() {
    return shared;
  }

  public void setShared(Boolean shared) {
    this.shared = shared;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Mount mount = (Mount) o;
    return Objects.equals(this.encryptOptions, mount.encryptOptions) &&
        Objects.equals(this.mountPoint, mount.mountPoint) &&
        Objects.equals(this.name, mount.name) &&
        Objects.equals(this.options, mount.options) &&
        Objects.equals(this.path, mount.path) &&
        Objects.equals(this.readOnly, mount.readOnly) &&
        Objects.equals(this.shared, mount.shared);
  }

  @Override
  public int hashCode() {
    return Objects.hash(encryptOptions, mountPoint, name, options, path, readOnly, shared);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mount {\n");
    
    sb.append("    encryptOptions: ").append(toIndentedString(encryptOptions)).append("\n");
    sb.append("    mountPoint: ").append(toIndentedString(mountPoint)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


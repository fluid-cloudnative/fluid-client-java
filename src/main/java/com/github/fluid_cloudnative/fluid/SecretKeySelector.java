/*
 * fluid
 * Python SDK for fluid
 *
 * OpenAPI spec version: v0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.fluid_cloudnative.fluid;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * SecretKeySelector
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-14T16:48:53.494+08:00")
public class SecretKeySelector {
  @SerializedName("key")
  private String key = null;

  @SerializedName("name")
  private String name = null;

  public SecretKeySelector key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The required key in the secret
   * @return key
  **/
  @ApiModelProperty(value = "The required key in the secret")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public SecretKeySelector name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of required secret
   * @return name
  **/
  @ApiModelProperty(value = "The name of required secret")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecretKeySelector secretKeySelector = (SecretKeySelector) o;
    return Objects.equals(this.key, secretKeySelector.key) &&
        Objects.equals(this.name, secretKeySelector.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecretKeySelector {\n");
    
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


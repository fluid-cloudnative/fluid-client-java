/*
 * fluid
 * client for fluid
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import models.CleanCachePolicy;
import models.Data;
import models.GooseFSCompTemplateSpec;
import models.GooseFSFuseSpec;
import models.InitUsersSpec;
import models.TieredStore;
import models.User;
import models.VersionSpec;

/**
 * GooseFSRuntimeSpec defines the desired state of GooseFSRuntime
 */
@ApiModel(description = "GooseFSRuntimeSpec defines the desired state of GooseFSRuntime")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-30T11:55:35.636004+08:00[Asia/Shanghai]")
public class GooseFSRuntimeSpec {
  public static final String SERIALIZED_NAME_API_GATEWAY = "apiGateway";
  @SerializedName(SERIALIZED_NAME_API_GATEWAY)
  private GooseFSCompTemplateSpec apiGateway;

  public static final String SERIALIZED_NAME_CLEAN_CACHE_POLICY = "cleanCachePolicy";
  @SerializedName(SERIALIZED_NAME_CLEAN_CACHE_POLICY)
  private CleanCachePolicy cleanCachePolicy;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Data data;

  public static final String SERIALIZED_NAME_DISABLE_PROMETHEUS = "disablePrometheus";
  @SerializedName(SERIALIZED_NAME_DISABLE_PROMETHEUS)
  private Boolean disablePrometheus;

  public static final String SERIALIZED_NAME_FUSE = "fuse";
  @SerializedName(SERIALIZED_NAME_FUSE)
  private GooseFSFuseSpec fuse;

  public static final String SERIALIZED_NAME_GOOSEFS_VERSION = "goosefsVersion";
  @SerializedName(SERIALIZED_NAME_GOOSEFS_VERSION)
  private VersionSpec goosefsVersion;

  public static final String SERIALIZED_NAME_HADOOP_CONFIG = "hadoopConfig";
  @SerializedName(SERIALIZED_NAME_HADOOP_CONFIG)
  private String hadoopConfig;

  public static final String SERIALIZED_NAME_INIT_USERS = "initUsers";
  @SerializedName(SERIALIZED_NAME_INIT_USERS)
  private InitUsersSpec initUsers;

  public static final String SERIALIZED_NAME_JOB_MASTER = "jobMaster";
  @SerializedName(SERIALIZED_NAME_JOB_MASTER)
  private GooseFSCompTemplateSpec jobMaster;

  public static final String SERIALIZED_NAME_JOB_WORKER = "jobWorker";
  @SerializedName(SERIALIZED_NAME_JOB_WORKER)
  private GooseFSCompTemplateSpec jobWorker;

  public static final String SERIALIZED_NAME_JVM_OPTIONS = "jvmOptions";
  @SerializedName(SERIALIZED_NAME_JVM_OPTIONS)
  private List<String> jvmOptions = null;

  public static final String SERIALIZED_NAME_MASTER = "master";
  @SerializedName(SERIALIZED_NAME_MASTER)
  private GooseFSCompTemplateSpec master;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map<String, String> properties = null;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_RUN_AS = "runAs";
  @SerializedName(SERIALIZED_NAME_RUN_AS)
  private User runAs;

  public static final String SERIALIZED_NAME_TIEREDSTORE = "tieredstore";
  @SerializedName(SERIALIZED_NAME_TIEREDSTORE)
  private TieredStore tieredstore;

  public static final String SERIALIZED_NAME_WORKER = "worker";
  @SerializedName(SERIALIZED_NAME_WORKER)
  private GooseFSCompTemplateSpec worker;


  public GooseFSRuntimeSpec apiGateway(GooseFSCompTemplateSpec apiGateway) {
    
    this.apiGateway = apiGateway;
    return this;
  }

   /**
   * Get apiGateway
   * @return apiGateway
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GooseFSCompTemplateSpec getApiGateway() {
    return apiGateway;
  }


  public void setApiGateway(GooseFSCompTemplateSpec apiGateway) {
    this.apiGateway = apiGateway;
  }


  public GooseFSRuntimeSpec cleanCachePolicy(CleanCachePolicy cleanCachePolicy) {
    
    this.cleanCachePolicy = cleanCachePolicy;
    return this;
  }

   /**
   * Get cleanCachePolicy
   * @return cleanCachePolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CleanCachePolicy getCleanCachePolicy() {
    return cleanCachePolicy;
  }


  public void setCleanCachePolicy(CleanCachePolicy cleanCachePolicy) {
    this.cleanCachePolicy = cleanCachePolicy;
  }


  public GooseFSRuntimeSpec data(Data data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Data getData() {
    return data;
  }


  public void setData(Data data) {
    this.data = data;
  }


  public GooseFSRuntimeSpec disablePrometheus(Boolean disablePrometheus) {
    
    this.disablePrometheus = disablePrometheus;
    return this;
  }

   /**
   * Disable monitoring for GooseFS Runtime Prometheus is enabled by default
   * @return disablePrometheus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disable monitoring for GooseFS Runtime Prometheus is enabled by default")

  public Boolean getDisablePrometheus() {
    return disablePrometheus;
  }


  public void setDisablePrometheus(Boolean disablePrometheus) {
    this.disablePrometheus = disablePrometheus;
  }


  public GooseFSRuntimeSpec fuse(GooseFSFuseSpec fuse) {
    
    this.fuse = fuse;
    return this;
  }

   /**
   * Get fuse
   * @return fuse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GooseFSFuseSpec getFuse() {
    return fuse;
  }


  public void setFuse(GooseFSFuseSpec fuse) {
    this.fuse = fuse;
  }


  public GooseFSRuntimeSpec goosefsVersion(VersionSpec goosefsVersion) {
    
    this.goosefsVersion = goosefsVersion;
    return this;
  }

   /**
   * Get goosefsVersion
   * @return goosefsVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VersionSpec getGoosefsVersion() {
    return goosefsVersion;
  }


  public void setGoosefsVersion(VersionSpec goosefsVersion) {
    this.goosefsVersion = goosefsVersion;
  }


  public GooseFSRuntimeSpec hadoopConfig(String hadoopConfig) {
    
    this.hadoopConfig = hadoopConfig;
    return this;
  }

   /**
   * Name of the configMap used to support HDFS configurations when using HDFS as GooseFS&#39;s UFS. The configMap must be in the same namespace with the GooseFSRuntime. The configMap should contain user-specific HDFS conf files in it. For now, only \&quot;hdfs-site.xml\&quot; and \&quot;core-site.xml\&quot; are supported. It must take the filename of the conf file as the key and content of the file as the value.
   * @return hadoopConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the configMap used to support HDFS configurations when using HDFS as GooseFS's UFS. The configMap must be in the same namespace with the GooseFSRuntime. The configMap should contain user-specific HDFS conf files in it. For now, only \"hdfs-site.xml\" and \"core-site.xml\" are supported. It must take the filename of the conf file as the key and content of the file as the value.")

  public String getHadoopConfig() {
    return hadoopConfig;
  }


  public void setHadoopConfig(String hadoopConfig) {
    this.hadoopConfig = hadoopConfig;
  }


  public GooseFSRuntimeSpec initUsers(InitUsersSpec initUsers) {
    
    this.initUsers = initUsers;
    return this;
  }

   /**
   * Get initUsers
   * @return initUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InitUsersSpec getInitUsers() {
    return initUsers;
  }


  public void setInitUsers(InitUsersSpec initUsers) {
    this.initUsers = initUsers;
  }


  public GooseFSRuntimeSpec jobMaster(GooseFSCompTemplateSpec jobMaster) {
    
    this.jobMaster = jobMaster;
    return this;
  }

   /**
   * Get jobMaster
   * @return jobMaster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GooseFSCompTemplateSpec getJobMaster() {
    return jobMaster;
  }


  public void setJobMaster(GooseFSCompTemplateSpec jobMaster) {
    this.jobMaster = jobMaster;
  }


  public GooseFSRuntimeSpec jobWorker(GooseFSCompTemplateSpec jobWorker) {
    
    this.jobWorker = jobWorker;
    return this;
  }

   /**
   * Get jobWorker
   * @return jobWorker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GooseFSCompTemplateSpec getJobWorker() {
    return jobWorker;
  }


  public void setJobWorker(GooseFSCompTemplateSpec jobWorker) {
    this.jobWorker = jobWorker;
  }


  public GooseFSRuntimeSpec jvmOptions(List<String> jvmOptions) {
    
    this.jvmOptions = jvmOptions;
    return this;
  }

  public GooseFSRuntimeSpec addJvmOptionsItem(String jvmOptionsItem) {
    if (this.jvmOptions == null) {
      this.jvmOptions = new ArrayList<String>();
    }
    this.jvmOptions.add(jvmOptionsItem);
    return this;
  }

   /**
   * Options for JVM
   * @return jvmOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Options for JVM")

  public List<String> getJvmOptions() {
    return jvmOptions;
  }


  public void setJvmOptions(List<String> jvmOptions) {
    this.jvmOptions = jvmOptions;
  }


  public GooseFSRuntimeSpec master(GooseFSCompTemplateSpec master) {
    
    this.master = master;
    return this;
  }

   /**
   * Get master
   * @return master
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GooseFSCompTemplateSpec getMaster() {
    return master;
  }


  public void setMaster(GooseFSCompTemplateSpec master) {
    this.master = master;
  }


  public GooseFSRuntimeSpec properties(Map<String, String> properties) {
    
    this.properties = properties;
    return this;
  }

  public GooseFSRuntimeSpec putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, String>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Configurable properties for the GOOSEFS component. &lt;br&gt; Refer to &lt;a href&#x3D;\&quot;https://cloud.tencent.com/document/product/436/56415\&quot;&gt;GOOSEFS Configuration Properties&lt;/a&gt; for more info
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Configurable properties for the GOOSEFS component. <br> Refer to <a href=\"https://cloud.tencent.com/document/product/436/56415\">GOOSEFS Configuration Properties</a> for more info")

  public Map<String, String> getProperties() {
    return properties;
  }


  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  public GooseFSRuntimeSpec replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * The replicas of the worker, need to be specified
   * @return replicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The replicas of the worker, need to be specified")

  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public GooseFSRuntimeSpec runAs(User runAs) {
    
    this.runAs = runAs;
    return this;
  }

   /**
   * Get runAs
   * @return runAs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public User getRunAs() {
    return runAs;
  }


  public void setRunAs(User runAs) {
    this.runAs = runAs;
  }


  public GooseFSRuntimeSpec tieredstore(TieredStore tieredstore) {
    
    this.tieredstore = tieredstore;
    return this;
  }

   /**
   * Get tieredstore
   * @return tieredstore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TieredStore getTieredstore() {
    return tieredstore;
  }


  public void setTieredstore(TieredStore tieredstore) {
    this.tieredstore = tieredstore;
  }


  public GooseFSRuntimeSpec worker(GooseFSCompTemplateSpec worker) {
    
    this.worker = worker;
    return this;
  }

   /**
   * Get worker
   * @return worker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GooseFSCompTemplateSpec getWorker() {
    return worker;
  }


  public void setWorker(GooseFSCompTemplateSpec worker) {
    this.worker = worker;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GooseFSRuntimeSpec gooseFSRuntimeSpec = (GooseFSRuntimeSpec) o;
    return Objects.equals(this.apiGateway, gooseFSRuntimeSpec.apiGateway) &&
        Objects.equals(this.cleanCachePolicy, gooseFSRuntimeSpec.cleanCachePolicy) &&
        Objects.equals(this.data, gooseFSRuntimeSpec.data) &&
        Objects.equals(this.disablePrometheus, gooseFSRuntimeSpec.disablePrometheus) &&
        Objects.equals(this.fuse, gooseFSRuntimeSpec.fuse) &&
        Objects.equals(this.goosefsVersion, gooseFSRuntimeSpec.goosefsVersion) &&
        Objects.equals(this.hadoopConfig, gooseFSRuntimeSpec.hadoopConfig) &&
        Objects.equals(this.initUsers, gooseFSRuntimeSpec.initUsers) &&
        Objects.equals(this.jobMaster, gooseFSRuntimeSpec.jobMaster) &&
        Objects.equals(this.jobWorker, gooseFSRuntimeSpec.jobWorker) &&
        Objects.equals(this.jvmOptions, gooseFSRuntimeSpec.jvmOptions) &&
        Objects.equals(this.master, gooseFSRuntimeSpec.master) &&
        Objects.equals(this.properties, gooseFSRuntimeSpec.properties) &&
        Objects.equals(this.replicas, gooseFSRuntimeSpec.replicas) &&
        Objects.equals(this.runAs, gooseFSRuntimeSpec.runAs) &&
        Objects.equals(this.tieredstore, gooseFSRuntimeSpec.tieredstore) &&
        Objects.equals(this.worker, gooseFSRuntimeSpec.worker);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiGateway, cleanCachePolicy, data, disablePrometheus, fuse, goosefsVersion, hadoopConfig, initUsers, jobMaster, jobWorker, jvmOptions, master, properties, replicas, runAs, tieredstore, worker);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GooseFSRuntimeSpec {\n");
    sb.append("    apiGateway: ").append(toIndentedString(apiGateway)).append("\n");
    sb.append("    cleanCachePolicy: ").append(toIndentedString(cleanCachePolicy)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    disablePrometheus: ").append(toIndentedString(disablePrometheus)).append("\n");
    sb.append("    fuse: ").append(toIndentedString(fuse)).append("\n");
    sb.append("    goosefsVersion: ").append(toIndentedString(goosefsVersion)).append("\n");
    sb.append("    hadoopConfig: ").append(toIndentedString(hadoopConfig)).append("\n");
    sb.append("    initUsers: ").append(toIndentedString(initUsers)).append("\n");
    sb.append("    jobMaster: ").append(toIndentedString(jobMaster)).append("\n");
    sb.append("    jobWorker: ").append(toIndentedString(jobWorker)).append("\n");
    sb.append("    jvmOptions: ").append(toIndentedString(jvmOptions)).append("\n");
    sb.append("    master: ").append(toIndentedString(master)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    runAs: ").append(toIndentedString(runAs)).append("\n");
    sb.append("    tieredstore: ").append(toIndentedString(tieredstore)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


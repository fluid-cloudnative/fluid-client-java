/*
 * fluid
 * client for fluid
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import from kubernetes.client import V1ResourceRequirements;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import models.OperationRef;
import models.PodMetadata;
import models.TargetDataset;
import models.TargetPath;
import models.V1Affinity;
import models.V1Toleration;

/**
 * DataLoadSpec defines the desired state of DataLoad
 */
@ApiModel(description = "DataLoadSpec defines the desired state of DataLoad")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-15T22:35:53.526622+08:00[Asia/Shanghai]")
public class DataLoadSpec {
  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private V1Affinity affinity = null;

  public static final String SERIALIZED_NAME_DATASET = "dataset";
  @SerializedName(SERIALIZED_NAME_DATASET)
  private TargetDataset dataset;

  public static final String SERIALIZED_NAME_LOAD_METADATA = "loadMetadata";
  @SerializedName(SERIALIZED_NAME_LOAD_METADATA)
  private Boolean loadMetadata;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  private Map<String, String> nodeSelector = null;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private Map<String, String> options = null;

  public static final String SERIALIZED_NAME_POD_METADATA = "podMetadata";
  @SerializedName(SERIALIZED_NAME_POD_METADATA)
  private PodMetadata podMetadata;

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private String policy;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private V1ResourceRequirements resources = null;

  public static final String SERIALIZED_NAME_RUN_AFTER = "runAfter";
  @SerializedName(SERIALIZED_NAME_RUN_AFTER)
  private OperationRef runAfter;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_SCHEDULER_NAME = "schedulerName";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_NAME)
  private String schedulerName;

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private List<TargetPath> target = null;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private List<V1Toleration> tolerations = null;

  public static final String SERIALIZED_NAME_TTL_SECONDS_AFTER_FINISHED = "ttlSecondsAfterFinished";
  @SerializedName(SERIALIZED_NAME_TTL_SECONDS_AFTER_FINISHED)
  private Integer ttlSecondsAfterFinished;


  public DataLoadSpec affinity(V1Affinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1Affinity getAffinity() {
    return affinity;
  }


  public void setAffinity(V1Affinity affinity) {
    this.affinity = affinity;
  }


  public DataLoadSpec dataset(TargetDataset dataset) {
    
    this.dataset = dataset;
    return this;
  }

   /**
   * Get dataset
   * @return dataset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TargetDataset getDataset() {
    return dataset;
  }


  public void setDataset(TargetDataset dataset) {
    this.dataset = dataset;
  }


  public DataLoadSpec loadMetadata(Boolean loadMetadata) {
    
    this.loadMetadata = loadMetadata;
    return this;
  }

   /**
   * LoadMetadata specifies if the dataload job should load metadata
   * @return loadMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "LoadMetadata specifies if the dataload job should load metadata")

  public Boolean getLoadMetadata() {
    return loadMetadata;
  }


  public void setLoadMetadata(Boolean loadMetadata) {
    this.loadMetadata = loadMetadata;
  }


  public DataLoadSpec nodeSelector(Map<String, String> nodeSelector) {
    
    this.nodeSelector = nodeSelector;
    return this;
  }

  public DataLoadSpec putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<String, String>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * NodeSelector defiens node selector for DataLoad pod
   * @return nodeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "NodeSelector defiens node selector for DataLoad pod")

  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }


  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public DataLoadSpec options(Map<String, String> options) {
    
    this.options = options;
    return this;
  }

  public DataLoadSpec putOptionsItem(String key, String optionsItem) {
    if (this.options == null) {
      this.options = new HashMap<String, String>();
    }
    this.options.put(key, optionsItem);
    return this;
  }

   /**
   * Options specifies the extra dataload properties for runtime
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Options specifies the extra dataload properties for runtime")

  public Map<String, String> getOptions() {
    return options;
  }


  public void setOptions(Map<String, String> options) {
    this.options = options;
  }


  public DataLoadSpec podMetadata(PodMetadata podMetadata) {
    
    this.podMetadata = podMetadata;
    return this;
  }

   /**
   * Get podMetadata
   * @return podMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PodMetadata getPodMetadata() {
    return podMetadata;
  }


  public void setPodMetadata(PodMetadata podMetadata) {
    this.podMetadata = podMetadata;
  }


  public DataLoadSpec policy(String policy) {
    
    this.policy = policy;
    return this;
  }

   /**
   * including Once, Cron, OnEvent
   * @return policy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "including Once, Cron, OnEvent")

  public String getPolicy() {
    return policy;
  }


  public void setPolicy(String policy) {
    this.policy = policy;
  }


  public DataLoadSpec resources(V1ResourceRequirements resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1ResourceRequirements getResources() {
    return resources;
  }


  public void setResources(V1ResourceRequirements resources) {
    this.resources = resources;
  }


  public DataLoadSpec runAfter(OperationRef runAfter) {
    
    this.runAfter = runAfter;
    return this;
  }

   /**
   * Get runAfter
   * @return runAfter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OperationRef getRunAfter() {
    return runAfter;
  }


  public void setRunAfter(OperationRef runAfter) {
    this.runAfter = runAfter;
  }


  public DataLoadSpec schedule(String schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * The schedule in Cron format, only set when policy is cron, see https://en.wikipedia.org/wiki/Cron.
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The schedule in Cron format, only set when policy is cron, see https://en.wikipedia.org/wiki/Cron.")

  public String getSchedule() {
    return schedule;
  }


  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public DataLoadSpec schedulerName(String schedulerName) {
    
    this.schedulerName = schedulerName;
    return this;
  }

   /**
   * SchedulerName sets the scheduler to be used for DataLoad pod
   * @return schedulerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SchedulerName sets the scheduler to be used for DataLoad pod")

  public String getSchedulerName() {
    return schedulerName;
  }


  public void setSchedulerName(String schedulerName) {
    this.schedulerName = schedulerName;
  }


  public DataLoadSpec target(List<TargetPath> target) {
    
    this.target = target;
    return this;
  }

  public DataLoadSpec addTargetItem(TargetPath targetItem) {
    if (this.target == null) {
      this.target = new ArrayList<TargetPath>();
    }
    this.target.add(targetItem);
    return this;
  }

   /**
   * Target defines target paths that needs to be loaded
   * @return target
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Target defines target paths that needs to be loaded")

  public List<TargetPath> getTarget() {
    return target;
  }


  public void setTarget(List<TargetPath> target) {
    this.target = target;
  }


  public DataLoadSpec tolerations(List<V1Toleration> tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

  public DataLoadSpec addTolerationsItem(V1Toleration tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<V1Toleration>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * Tolerations defines tolerations for DataLoad pod
   * @return tolerations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tolerations defines tolerations for DataLoad pod")

  public List<V1Toleration> getTolerations() {
    return tolerations;
  }


  public void setTolerations(List<V1Toleration> tolerations) {
    this.tolerations = tolerations;
  }


  public DataLoadSpec ttlSecondsAfterFinished(Integer ttlSecondsAfterFinished) {
    
    this.ttlSecondsAfterFinished = ttlSecondsAfterFinished;
    return this;
  }

   /**
   * TTLSecondsAfterFinished is the time second to clean up data operations after finished or failed
   * @return ttlSecondsAfterFinished
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TTLSecondsAfterFinished is the time second to clean up data operations after finished or failed")

  public Integer getTtlSecondsAfterFinished() {
    return ttlSecondsAfterFinished;
  }


  public void setTtlSecondsAfterFinished(Integer ttlSecondsAfterFinished) {
    this.ttlSecondsAfterFinished = ttlSecondsAfterFinished;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataLoadSpec dataLoadSpec = (DataLoadSpec) o;
    return Objects.equals(this.affinity, dataLoadSpec.affinity) &&
        Objects.equals(this.dataset, dataLoadSpec.dataset) &&
        Objects.equals(this.loadMetadata, dataLoadSpec.loadMetadata) &&
        Objects.equals(this.nodeSelector, dataLoadSpec.nodeSelector) &&
        Objects.equals(this.options, dataLoadSpec.options) &&
        Objects.equals(this.podMetadata, dataLoadSpec.podMetadata) &&
        Objects.equals(this.policy, dataLoadSpec.policy) &&
        Objects.equals(this.resources, dataLoadSpec.resources) &&
        Objects.equals(this.runAfter, dataLoadSpec.runAfter) &&
        Objects.equals(this.schedule, dataLoadSpec.schedule) &&
        Objects.equals(this.schedulerName, dataLoadSpec.schedulerName) &&
        Objects.equals(this.target, dataLoadSpec.target) &&
        Objects.equals(this.tolerations, dataLoadSpec.tolerations) &&
        Objects.equals(this.ttlSecondsAfterFinished, dataLoadSpec.ttlSecondsAfterFinished);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinity, dataset, loadMetadata, nodeSelector, options, podMetadata, policy, resources, runAfter, schedule, schedulerName, target, tolerations, ttlSecondsAfterFinished);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataLoadSpec {\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    dataset: ").append(toIndentedString(dataset)).append("\n");
    sb.append("    loadMetadata: ").append(toIndentedString(loadMetadata)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    podMetadata: ").append(toIndentedString(podMetadata)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    runAfter: ").append(toIndentedString(runAfter)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    schedulerName: ").append(toIndentedString(schedulerName)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    ttlSecondsAfterFinished: ").append(toIndentedString(ttlSecondsAfterFinished)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


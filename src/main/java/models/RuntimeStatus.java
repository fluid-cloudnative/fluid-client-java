/*
 * fluid
 * client for fluid
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import models.APIGatewayStatus;
import models.Mount;
import models.RuntimeCondition;
import models.V1NodeAffinity;
import models.V1Time;

/**
 * RuntimeStatus defines the observed state of Runtime
 */
@ApiModel(description = "RuntimeStatus defines the observed state of Runtime")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-30T14:39:14.140796+08:00[Asia/Shanghai]")
public class RuntimeStatus {
  public static final String SERIALIZED_NAME_API_GATEWAY = "apiGateway";
  @SerializedName(SERIALIZED_NAME_API_GATEWAY)
  private APIGatewayStatus apiGateway;

  public static final String SERIALIZED_NAME_CACHE_AFFINITY = "cacheAffinity";
  @SerializedName(SERIALIZED_NAME_CACHE_AFFINITY)
  private V1NodeAffinity cacheAffinity = null;

  public static final String SERIALIZED_NAME_CACHE_STATES = "cacheStates";
  @SerializedName(SERIALIZED_NAME_CACHE_STATES)
  private Map<String, String> cacheStates = null;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<RuntimeCondition> conditions = null;

  public static final String SERIALIZED_NAME_CURRENT_FUSE_NUMBER_SCHEDULED = "currentFuseNumberScheduled";
  @SerializedName(SERIALIZED_NAME_CURRENT_FUSE_NUMBER_SCHEDULED)
  private Integer currentFuseNumberScheduled = 0;

  public static final String SERIALIZED_NAME_CURRENT_MASTER_NUMBER_SCHEDULED = "currentMasterNumberScheduled";
  @SerializedName(SERIALIZED_NAME_CURRENT_MASTER_NUMBER_SCHEDULED)
  private Integer currentMasterNumberScheduled = 0;

  public static final String SERIALIZED_NAME_CURRENT_WORKER_NUMBER_SCHEDULED = "currentWorkerNumberScheduled";
  @SerializedName(SERIALIZED_NAME_CURRENT_WORKER_NUMBER_SCHEDULED)
  private Integer currentWorkerNumberScheduled = 0;

  public static final String SERIALIZED_NAME_DESIRED_FUSE_NUMBER_SCHEDULED = "desiredFuseNumberScheduled";
  @SerializedName(SERIALIZED_NAME_DESIRED_FUSE_NUMBER_SCHEDULED)
  private Integer desiredFuseNumberScheduled = 0;

  public static final String SERIALIZED_NAME_DESIRED_MASTER_NUMBER_SCHEDULED = "desiredMasterNumberScheduled";
  @SerializedName(SERIALIZED_NAME_DESIRED_MASTER_NUMBER_SCHEDULED)
  private Integer desiredMasterNumberScheduled = 0;

  public static final String SERIALIZED_NAME_DESIRED_WORKER_NUMBER_SCHEDULED = "desiredWorkerNumberScheduled";
  @SerializedName(SERIALIZED_NAME_DESIRED_WORKER_NUMBER_SCHEDULED)
  private Integer desiredWorkerNumberScheduled = 0;

  public static final String SERIALIZED_NAME_FUSE_NUMBER_AVAILABLE = "fuseNumberAvailable";
  @SerializedName(SERIALIZED_NAME_FUSE_NUMBER_AVAILABLE)
  private Integer fuseNumberAvailable;

  public static final String SERIALIZED_NAME_FUSE_NUMBER_READY = "fuseNumberReady";
  @SerializedName(SERIALIZED_NAME_FUSE_NUMBER_READY)
  private Integer fuseNumberReady = 0;

  public static final String SERIALIZED_NAME_FUSE_NUMBER_UNAVAILABLE = "fuseNumberUnavailable";
  @SerializedName(SERIALIZED_NAME_FUSE_NUMBER_UNAVAILABLE)
  private Integer fuseNumberUnavailable;

  public static final String SERIALIZED_NAME_FUSE_PHASE = "fusePhase";
  @SerializedName(SERIALIZED_NAME_FUSE_PHASE)
  private String fusePhase = "";

  public static final String SERIALIZED_NAME_FUSE_REASON = "fuseReason";
  @SerializedName(SERIALIZED_NAME_FUSE_REASON)
  private String fuseReason;

  public static final String SERIALIZED_NAME_MASTER_NUMBER_READY = "masterNumberReady";
  @SerializedName(SERIALIZED_NAME_MASTER_NUMBER_READY)
  private Integer masterNumberReady = 0;

  public static final String SERIALIZED_NAME_MASTER_PHASE = "masterPhase";
  @SerializedName(SERIALIZED_NAME_MASTER_PHASE)
  private String masterPhase = "";

  public static final String SERIALIZED_NAME_MASTER_REASON = "masterReason";
  @SerializedName(SERIALIZED_NAME_MASTER_REASON)
  private String masterReason;

  public static final String SERIALIZED_NAME_MOUNT_TIME = "mountTime";
  @SerializedName(SERIALIZED_NAME_MOUNT_TIME)
  private V1Time mountTime = null;

  public static final String SERIALIZED_NAME_MOUNTS = "mounts";
  @SerializedName(SERIALIZED_NAME_MOUNTS)
  private List<Mount> mounts = null;

  public static final String SERIALIZED_NAME_SELECTOR = "selector";
  @SerializedName(SERIALIZED_NAME_SELECTOR)
  private String selector;

  public static final String SERIALIZED_NAME_SETUP_DURATION = "setupDuration";
  @SerializedName(SERIALIZED_NAME_SETUP_DURATION)
  private String setupDuration;

  public static final String SERIALIZED_NAME_VALUE_FILE = "valueFile";
  @SerializedName(SERIALIZED_NAME_VALUE_FILE)
  private String valueFile = "";

  public static final String SERIALIZED_NAME_WORKER_NUMBER_AVAILABLE = "workerNumberAvailable";
  @SerializedName(SERIALIZED_NAME_WORKER_NUMBER_AVAILABLE)
  private Integer workerNumberAvailable;

  public static final String SERIALIZED_NAME_WORKER_NUMBER_READY = "workerNumberReady";
  @SerializedName(SERIALIZED_NAME_WORKER_NUMBER_READY)
  private Integer workerNumberReady = 0;

  public static final String SERIALIZED_NAME_WORKER_NUMBER_UNAVAILABLE = "workerNumberUnavailable";
  @SerializedName(SERIALIZED_NAME_WORKER_NUMBER_UNAVAILABLE)
  private Integer workerNumberUnavailable;

  public static final String SERIALIZED_NAME_WORKER_PHASE = "workerPhase";
  @SerializedName(SERIALIZED_NAME_WORKER_PHASE)
  private String workerPhase = "";

  public static final String SERIALIZED_NAME_WORKER_REASON = "workerReason";
  @SerializedName(SERIALIZED_NAME_WORKER_REASON)
  private String workerReason;


  public RuntimeStatus apiGateway(APIGatewayStatus apiGateway) {
    
    this.apiGateway = apiGateway;
    return this;
  }

   /**
   * Get apiGateway
   * @return apiGateway
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public APIGatewayStatus getApiGateway() {
    return apiGateway;
  }


  public void setApiGateway(APIGatewayStatus apiGateway) {
    this.apiGateway = apiGateway;
  }


  public RuntimeStatus cacheAffinity(V1NodeAffinity cacheAffinity) {
    
    this.cacheAffinity = cacheAffinity;
    return this;
  }

   /**
   * Get cacheAffinity
   * @return cacheAffinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1NodeAffinity getCacheAffinity() {
    return cacheAffinity;
  }


  public void setCacheAffinity(V1NodeAffinity cacheAffinity) {
    this.cacheAffinity = cacheAffinity;
  }


  public RuntimeStatus cacheStates(Map<String, String> cacheStates) {
    
    this.cacheStates = cacheStates;
    return this;
  }

  public RuntimeStatus putCacheStatesItem(String key, String cacheStatesItem) {
    if (this.cacheStates == null) {
      this.cacheStates = new HashMap<String, String>();
    }
    this.cacheStates.put(key, cacheStatesItem);
    return this;
  }

   /**
   * CacheStatus represents the total resources of the dataset.
   * @return cacheStates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CacheStatus represents the total resources of the dataset.")

  public Map<String, String> getCacheStates() {
    return cacheStates;
  }


  public void setCacheStates(Map<String, String> cacheStates) {
    this.cacheStates = cacheStates;
  }


  public RuntimeStatus conditions(List<RuntimeCondition> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public RuntimeStatus addConditionsItem(RuntimeCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<RuntimeCondition>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Represents the latest available observations of a ddc runtime&#39;s current state.
   * @return conditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Represents the latest available observations of a ddc runtime's current state.")

  public List<RuntimeCondition> getConditions() {
    return conditions;
  }


  public void setConditions(List<RuntimeCondition> conditions) {
    this.conditions = conditions;
  }


  public RuntimeStatus currentFuseNumberScheduled(Integer currentFuseNumberScheduled) {
    
    this.currentFuseNumberScheduled = currentFuseNumberScheduled;
    return this;
  }

   /**
   * The total number of nodes that can be running the runtime Fuse pod (including nodes correctly running the runtime Fuse pod).
   * @return currentFuseNumberScheduled
  **/
  @ApiModelProperty(required = true, value = "The total number of nodes that can be running the runtime Fuse pod (including nodes correctly running the runtime Fuse pod).")

  public Integer getCurrentFuseNumberScheduled() {
    return currentFuseNumberScheduled;
  }


  public void setCurrentFuseNumberScheduled(Integer currentFuseNumberScheduled) {
    this.currentFuseNumberScheduled = currentFuseNumberScheduled;
  }


  public RuntimeStatus currentMasterNumberScheduled(Integer currentMasterNumberScheduled) {
    
    this.currentMasterNumberScheduled = currentMasterNumberScheduled;
    return this;
  }

   /**
   * The total number of nodes that should be running the runtime pod (including nodes correctly running the runtime master pod).
   * @return currentMasterNumberScheduled
  **/
  @ApiModelProperty(required = true, value = "The total number of nodes that should be running the runtime pod (including nodes correctly running the runtime master pod).")

  public Integer getCurrentMasterNumberScheduled() {
    return currentMasterNumberScheduled;
  }


  public void setCurrentMasterNumberScheduled(Integer currentMasterNumberScheduled) {
    this.currentMasterNumberScheduled = currentMasterNumberScheduled;
  }


  public RuntimeStatus currentWorkerNumberScheduled(Integer currentWorkerNumberScheduled) {
    
    this.currentWorkerNumberScheduled = currentWorkerNumberScheduled;
    return this;
  }

   /**
   * The total number of nodes that can be running the runtime worker pod (including nodes correctly running the runtime worker pod).
   * @return currentWorkerNumberScheduled
  **/
  @ApiModelProperty(required = true, value = "The total number of nodes that can be running the runtime worker pod (including nodes correctly running the runtime worker pod).")

  public Integer getCurrentWorkerNumberScheduled() {
    return currentWorkerNumberScheduled;
  }


  public void setCurrentWorkerNumberScheduled(Integer currentWorkerNumberScheduled) {
    this.currentWorkerNumberScheduled = currentWorkerNumberScheduled;
  }


  public RuntimeStatus desiredFuseNumberScheduled(Integer desiredFuseNumberScheduled) {
    
    this.desiredFuseNumberScheduled = desiredFuseNumberScheduled;
    return this;
  }

   /**
   * The total number of nodes that should be running the runtime Fuse pod (including nodes correctly running the runtime Fuse pod).
   * @return desiredFuseNumberScheduled
  **/
  @ApiModelProperty(required = true, value = "The total number of nodes that should be running the runtime Fuse pod (including nodes correctly running the runtime Fuse pod).")

  public Integer getDesiredFuseNumberScheduled() {
    return desiredFuseNumberScheduled;
  }


  public void setDesiredFuseNumberScheduled(Integer desiredFuseNumberScheduled) {
    this.desiredFuseNumberScheduled = desiredFuseNumberScheduled;
  }


  public RuntimeStatus desiredMasterNumberScheduled(Integer desiredMasterNumberScheduled) {
    
    this.desiredMasterNumberScheduled = desiredMasterNumberScheduled;
    return this;
  }

   /**
   * The total number of nodes that should be running the runtime pod (including nodes correctly running the runtime master pod).
   * @return desiredMasterNumberScheduled
  **/
  @ApiModelProperty(required = true, value = "The total number of nodes that should be running the runtime pod (including nodes correctly running the runtime master pod).")

  public Integer getDesiredMasterNumberScheduled() {
    return desiredMasterNumberScheduled;
  }


  public void setDesiredMasterNumberScheduled(Integer desiredMasterNumberScheduled) {
    this.desiredMasterNumberScheduled = desiredMasterNumberScheduled;
  }


  public RuntimeStatus desiredWorkerNumberScheduled(Integer desiredWorkerNumberScheduled) {
    
    this.desiredWorkerNumberScheduled = desiredWorkerNumberScheduled;
    return this;
  }

   /**
   * The total number of nodes that should be running the runtime worker pod (including nodes correctly running the runtime worker pod).
   * @return desiredWorkerNumberScheduled
  **/
  @ApiModelProperty(required = true, value = "The total number of nodes that should be running the runtime worker pod (including nodes correctly running the runtime worker pod).")

  public Integer getDesiredWorkerNumberScheduled() {
    return desiredWorkerNumberScheduled;
  }


  public void setDesiredWorkerNumberScheduled(Integer desiredWorkerNumberScheduled) {
    this.desiredWorkerNumberScheduled = desiredWorkerNumberScheduled;
  }


  public RuntimeStatus fuseNumberAvailable(Integer fuseNumberAvailable) {
    
    this.fuseNumberAvailable = fuseNumberAvailable;
    return this;
  }

   /**
   * The number of nodes that should be running the runtime Fuse pod and have one or more of the runtime Fuse pod running and available (ready for at least spec.minReadySeconds)
   * @return fuseNumberAvailable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of nodes that should be running the runtime Fuse pod and have one or more of the runtime Fuse pod running and available (ready for at least spec.minReadySeconds)")

  public Integer getFuseNumberAvailable() {
    return fuseNumberAvailable;
  }


  public void setFuseNumberAvailable(Integer fuseNumberAvailable) {
    this.fuseNumberAvailable = fuseNumberAvailable;
  }


  public RuntimeStatus fuseNumberReady(Integer fuseNumberReady) {
    
    this.fuseNumberReady = fuseNumberReady;
    return this;
  }

   /**
   * The number of nodes that should be running the runtime Fuse pod and have one or more of the runtime Fuse pod running and ready.
   * @return fuseNumberReady
  **/
  @ApiModelProperty(required = true, value = "The number of nodes that should be running the runtime Fuse pod and have one or more of the runtime Fuse pod running and ready.")

  public Integer getFuseNumberReady() {
    return fuseNumberReady;
  }


  public void setFuseNumberReady(Integer fuseNumberReady) {
    this.fuseNumberReady = fuseNumberReady;
  }


  public RuntimeStatus fuseNumberUnavailable(Integer fuseNumberUnavailable) {
    
    this.fuseNumberUnavailable = fuseNumberUnavailable;
    return this;
  }

   /**
   * The number of nodes that should be running the runtime fuse pod and have none of the runtime fuse pod running and available (ready for at least spec.minReadySeconds)
   * @return fuseNumberUnavailable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of nodes that should be running the runtime fuse pod and have none of the runtime fuse pod running and available (ready for at least spec.minReadySeconds)")

  public Integer getFuseNumberUnavailable() {
    return fuseNumberUnavailable;
  }


  public void setFuseNumberUnavailable(Integer fuseNumberUnavailable) {
    this.fuseNumberUnavailable = fuseNumberUnavailable;
  }


  public RuntimeStatus fusePhase(String fusePhase) {
    
    this.fusePhase = fusePhase;
    return this;
  }

   /**
   * FusePhase is the Fuse running phase
   * @return fusePhase
  **/
  @ApiModelProperty(required = true, value = "FusePhase is the Fuse running phase")

  public String getFusePhase() {
    return fusePhase;
  }


  public void setFusePhase(String fusePhase) {
    this.fusePhase = fusePhase;
  }


  public RuntimeStatus fuseReason(String fuseReason) {
    
    this.fuseReason = fuseReason;
    return this;
  }

   /**
   * Reason for the condition&#39;s last transition.
   * @return fuseReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for the condition's last transition.")

  public String getFuseReason() {
    return fuseReason;
  }


  public void setFuseReason(String fuseReason) {
    this.fuseReason = fuseReason;
  }


  public RuntimeStatus masterNumberReady(Integer masterNumberReady) {
    
    this.masterNumberReady = masterNumberReady;
    return this;
  }

   /**
   * The number of nodes that should be running the runtime worker pod and have zero or more of the runtime master pod running and ready.
   * @return masterNumberReady
  **/
  @ApiModelProperty(required = true, value = "The number of nodes that should be running the runtime worker pod and have zero or more of the runtime master pod running and ready.")

  public Integer getMasterNumberReady() {
    return masterNumberReady;
  }


  public void setMasterNumberReady(Integer masterNumberReady) {
    this.masterNumberReady = masterNumberReady;
  }


  public RuntimeStatus masterPhase(String masterPhase) {
    
    this.masterPhase = masterPhase;
    return this;
  }

   /**
   * MasterPhase is the master running phase
   * @return masterPhase
  **/
  @ApiModelProperty(required = true, value = "MasterPhase is the master running phase")

  public String getMasterPhase() {
    return masterPhase;
  }


  public void setMasterPhase(String masterPhase) {
    this.masterPhase = masterPhase;
  }


  public RuntimeStatus masterReason(String masterReason) {
    
    this.masterReason = masterReason;
    return this;
  }

   /**
   * Reason for Master&#39;s condition transition
   * @return masterReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for Master's condition transition")

  public String getMasterReason() {
    return masterReason;
  }


  public void setMasterReason(String masterReason) {
    this.masterReason = masterReason;
  }


  public RuntimeStatus mountTime(V1Time mountTime) {
    
    this.mountTime = mountTime;
    return this;
  }

   /**
   * Get mountTime
   * @return mountTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1Time getMountTime() {
    return mountTime;
  }


  public void setMountTime(V1Time mountTime) {
    this.mountTime = mountTime;
  }


  public RuntimeStatus mounts(List<Mount> mounts) {
    
    this.mounts = mounts;
    return this;
  }

  public RuntimeStatus addMountsItem(Mount mountsItem) {
    if (this.mounts == null) {
      this.mounts = new ArrayList<Mount>();
    }
    this.mounts.add(mountsItem);
    return this;
  }

   /**
   * MountPoints represents the mount points specified in the bounded dataset
   * @return mounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "MountPoints represents the mount points specified in the bounded dataset")

  public List<Mount> getMounts() {
    return mounts;
  }


  public void setMounts(List<Mount> mounts) {
    this.mounts = mounts;
  }


  public RuntimeStatus selector(String selector) {
    
    this.selector = selector;
    return this;
  }

   /**
   * Selector is used for auto-scaling
   * @return selector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Selector is used for auto-scaling")

  public String getSelector() {
    return selector;
  }


  public void setSelector(String selector) {
    this.selector = selector;
  }


  public RuntimeStatus setupDuration(String setupDuration) {
    
    this.setupDuration = setupDuration;
    return this;
  }

   /**
   * Duration tell user how much time was spent to setup the runtime
   * @return setupDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Duration tell user how much time was spent to setup the runtime")

  public String getSetupDuration() {
    return setupDuration;
  }


  public void setSetupDuration(String setupDuration) {
    this.setupDuration = setupDuration;
  }


  public RuntimeStatus valueFile(String valueFile) {
    
    this.valueFile = valueFile;
    return this;
  }

   /**
   * config map used to set configurations
   * @return valueFile
  **/
  @ApiModelProperty(required = true, value = "config map used to set configurations")

  public String getValueFile() {
    return valueFile;
  }


  public void setValueFile(String valueFile) {
    this.valueFile = valueFile;
  }


  public RuntimeStatus workerNumberAvailable(Integer workerNumberAvailable) {
    
    this.workerNumberAvailable = workerNumberAvailable;
    return this;
  }

   /**
   * The number of nodes that should be running the runtime worker pod and have one or more of the runtime worker pod running and available (ready for at least spec.minReadySeconds)
   * @return workerNumberAvailable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of nodes that should be running the runtime worker pod and have one or more of the runtime worker pod running and available (ready for at least spec.minReadySeconds)")

  public Integer getWorkerNumberAvailable() {
    return workerNumberAvailable;
  }


  public void setWorkerNumberAvailable(Integer workerNumberAvailable) {
    this.workerNumberAvailable = workerNumberAvailable;
  }


  public RuntimeStatus workerNumberReady(Integer workerNumberReady) {
    
    this.workerNumberReady = workerNumberReady;
    return this;
  }

   /**
   * The number of nodes that should be running the runtime worker pod and have one or more of the runtime worker pod running and ready.
   * @return workerNumberReady
  **/
  @ApiModelProperty(required = true, value = "The number of nodes that should be running the runtime worker pod and have one or more of the runtime worker pod running and ready.")

  public Integer getWorkerNumberReady() {
    return workerNumberReady;
  }


  public void setWorkerNumberReady(Integer workerNumberReady) {
    this.workerNumberReady = workerNumberReady;
  }


  public RuntimeStatus workerNumberUnavailable(Integer workerNumberUnavailable) {
    
    this.workerNumberUnavailable = workerNumberUnavailable;
    return this;
  }

   /**
   * The number of nodes that should be running the runtime worker pod and have none of the runtime worker pod running and available (ready for at least spec.minReadySeconds)
   * @return workerNumberUnavailable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of nodes that should be running the runtime worker pod and have none of the runtime worker pod running and available (ready for at least spec.minReadySeconds)")

  public Integer getWorkerNumberUnavailable() {
    return workerNumberUnavailable;
  }


  public void setWorkerNumberUnavailable(Integer workerNumberUnavailable) {
    this.workerNumberUnavailable = workerNumberUnavailable;
  }


  public RuntimeStatus workerPhase(String workerPhase) {
    
    this.workerPhase = workerPhase;
    return this;
  }

   /**
   * WorkerPhase is the worker running phase
   * @return workerPhase
  **/
  @ApiModelProperty(required = true, value = "WorkerPhase is the worker running phase")

  public String getWorkerPhase() {
    return workerPhase;
  }


  public void setWorkerPhase(String workerPhase) {
    this.workerPhase = workerPhase;
  }


  public RuntimeStatus workerReason(String workerReason) {
    
    this.workerReason = workerReason;
    return this;
  }

   /**
   * Reason for Worker&#39;s condition transition
   * @return workerReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason for Worker's condition transition")

  public String getWorkerReason() {
    return workerReason;
  }


  public void setWorkerReason(String workerReason) {
    this.workerReason = workerReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuntimeStatus runtimeStatus = (RuntimeStatus) o;
    return Objects.equals(this.apiGateway, runtimeStatus.apiGateway) &&
        Objects.equals(this.cacheAffinity, runtimeStatus.cacheAffinity) &&
        Objects.equals(this.cacheStates, runtimeStatus.cacheStates) &&
        Objects.equals(this.conditions, runtimeStatus.conditions) &&
        Objects.equals(this.currentFuseNumberScheduled, runtimeStatus.currentFuseNumberScheduled) &&
        Objects.equals(this.currentMasterNumberScheduled, runtimeStatus.currentMasterNumberScheduled) &&
        Objects.equals(this.currentWorkerNumberScheduled, runtimeStatus.currentWorkerNumberScheduled) &&
        Objects.equals(this.desiredFuseNumberScheduled, runtimeStatus.desiredFuseNumberScheduled) &&
        Objects.equals(this.desiredMasterNumberScheduled, runtimeStatus.desiredMasterNumberScheduled) &&
        Objects.equals(this.desiredWorkerNumberScheduled, runtimeStatus.desiredWorkerNumberScheduled) &&
        Objects.equals(this.fuseNumberAvailable, runtimeStatus.fuseNumberAvailable) &&
        Objects.equals(this.fuseNumberReady, runtimeStatus.fuseNumberReady) &&
        Objects.equals(this.fuseNumberUnavailable, runtimeStatus.fuseNumberUnavailable) &&
        Objects.equals(this.fusePhase, runtimeStatus.fusePhase) &&
        Objects.equals(this.fuseReason, runtimeStatus.fuseReason) &&
        Objects.equals(this.masterNumberReady, runtimeStatus.masterNumberReady) &&
        Objects.equals(this.masterPhase, runtimeStatus.masterPhase) &&
        Objects.equals(this.masterReason, runtimeStatus.masterReason) &&
        Objects.equals(this.mountTime, runtimeStatus.mountTime) &&
        Objects.equals(this.mounts, runtimeStatus.mounts) &&
        Objects.equals(this.selector, runtimeStatus.selector) &&
        Objects.equals(this.setupDuration, runtimeStatus.setupDuration) &&
        Objects.equals(this.valueFile, runtimeStatus.valueFile) &&
        Objects.equals(this.workerNumberAvailable, runtimeStatus.workerNumberAvailable) &&
        Objects.equals(this.workerNumberReady, runtimeStatus.workerNumberReady) &&
        Objects.equals(this.workerNumberUnavailable, runtimeStatus.workerNumberUnavailable) &&
        Objects.equals(this.workerPhase, runtimeStatus.workerPhase) &&
        Objects.equals(this.workerReason, runtimeStatus.workerReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiGateway, cacheAffinity, cacheStates, conditions, currentFuseNumberScheduled, currentMasterNumberScheduled, currentWorkerNumberScheduled, desiredFuseNumberScheduled, desiredMasterNumberScheduled, desiredWorkerNumberScheduled, fuseNumberAvailable, fuseNumberReady, fuseNumberUnavailable, fusePhase, fuseReason, masterNumberReady, masterPhase, masterReason, mountTime, mounts, selector, setupDuration, valueFile, workerNumberAvailable, workerNumberReady, workerNumberUnavailable, workerPhase, workerReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuntimeStatus {\n");
    sb.append("    apiGateway: ").append(toIndentedString(apiGateway)).append("\n");
    sb.append("    cacheAffinity: ").append(toIndentedString(cacheAffinity)).append("\n");
    sb.append("    cacheStates: ").append(toIndentedString(cacheStates)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    currentFuseNumberScheduled: ").append(toIndentedString(currentFuseNumberScheduled)).append("\n");
    sb.append("    currentMasterNumberScheduled: ").append(toIndentedString(currentMasterNumberScheduled)).append("\n");
    sb.append("    currentWorkerNumberScheduled: ").append(toIndentedString(currentWorkerNumberScheduled)).append("\n");
    sb.append("    desiredFuseNumberScheduled: ").append(toIndentedString(desiredFuseNumberScheduled)).append("\n");
    sb.append("    desiredMasterNumberScheduled: ").append(toIndentedString(desiredMasterNumberScheduled)).append("\n");
    sb.append("    desiredWorkerNumberScheduled: ").append(toIndentedString(desiredWorkerNumberScheduled)).append("\n");
    sb.append("    fuseNumberAvailable: ").append(toIndentedString(fuseNumberAvailable)).append("\n");
    sb.append("    fuseNumberReady: ").append(toIndentedString(fuseNumberReady)).append("\n");
    sb.append("    fuseNumberUnavailable: ").append(toIndentedString(fuseNumberUnavailable)).append("\n");
    sb.append("    fusePhase: ").append(toIndentedString(fusePhase)).append("\n");
    sb.append("    fuseReason: ").append(toIndentedString(fuseReason)).append("\n");
    sb.append("    masterNumberReady: ").append(toIndentedString(masterNumberReady)).append("\n");
    sb.append("    masterPhase: ").append(toIndentedString(masterPhase)).append("\n");
    sb.append("    masterReason: ").append(toIndentedString(masterReason)).append("\n");
    sb.append("    mountTime: ").append(toIndentedString(mountTime)).append("\n");
    sb.append("    mounts: ").append(toIndentedString(mounts)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    setupDuration: ").append(toIndentedString(setupDuration)).append("\n");
    sb.append("    valueFile: ").append(toIndentedString(valueFile)).append("\n");
    sb.append("    workerNumberAvailable: ").append(toIndentedString(workerNumberAvailable)).append("\n");
    sb.append("    workerNumberReady: ").append(toIndentedString(workerNumberReady)).append("\n");
    sb.append("    workerNumberUnavailable: ").append(toIndentedString(workerNumberUnavailable)).append("\n");
    sb.append("    workerPhase: ").append(toIndentedString(workerPhase)).append("\n");
    sb.append("    workerReason: ").append(toIndentedString(workerReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * fluid
 * client for fluid
 *
 * The version of the OpenAPI document: v0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CleanCachePolicy defines policies when cleaning cache
 */
@ApiModel(description = "CleanCachePolicy defines policies when cleaning cache")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-30T14:39:14.140796+08:00[Asia/Shanghai]")
public class CleanCachePolicy {
  public static final String SERIALIZED_NAME_GRACE_PERIOD_SECONDS = "gracePeriodSeconds";
  @SerializedName(SERIALIZED_NAME_GRACE_PERIOD_SECONDS)
  private Integer gracePeriodSeconds;

  public static final String SERIALIZED_NAME_MAX_RETRY_ATTEMPTS = "maxRetryAttempts";
  @SerializedName(SERIALIZED_NAME_MAX_RETRY_ATTEMPTS)
  private Integer maxRetryAttempts;


  public CleanCachePolicy gracePeriodSeconds(Integer gracePeriodSeconds) {
    
    this.gracePeriodSeconds = gracePeriodSeconds;
    return this;
  }

   /**
   * Optional duration in seconds the cache needs to clean gracefully. May be decreased in delete runtime request. Value must be non-negative integer. The value zero indicates clean immediately via the timeout command (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with timeout command. Set this value longer than the expected cleanup time for your process.
   * @return gracePeriodSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional duration in seconds the cache needs to clean gracefully. May be decreased in delete runtime request. Value must be non-negative integer. The value zero indicates clean immediately via the timeout command (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with timeout command. Set this value longer than the expected cleanup time for your process.")

  public Integer getGracePeriodSeconds() {
    return gracePeriodSeconds;
  }


  public void setGracePeriodSeconds(Integer gracePeriodSeconds) {
    this.gracePeriodSeconds = gracePeriodSeconds;
  }


  public CleanCachePolicy maxRetryAttempts(Integer maxRetryAttempts) {
    
    this.maxRetryAttempts = maxRetryAttempts;
    return this;
  }

   /**
   * Optional max retry Attempts when cleanCache function returns an error after execution, runtime attempts to run it three more times by default. With Maximum Retry Attempts, you can customize the maximum number of retries. This gives you the option to continue processing retries.
   * @return maxRetryAttempts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional max retry Attempts when cleanCache function returns an error after execution, runtime attempts to run it three more times by default. With Maximum Retry Attempts, you can customize the maximum number of retries. This gives you the option to continue processing retries.")

  public Integer getMaxRetryAttempts() {
    return maxRetryAttempts;
  }


  public void setMaxRetryAttempts(Integer maxRetryAttempts) {
    this.maxRetryAttempts = maxRetryAttempts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CleanCachePolicy cleanCachePolicy = (CleanCachePolicy) o;
    return Objects.equals(this.gracePeriodSeconds, cleanCachePolicy.gracePeriodSeconds) &&
        Objects.equals(this.maxRetryAttempts, cleanCachePolicy.maxRetryAttempts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gracePeriodSeconds, maxRetryAttempts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CleanCachePolicy {\n");
    sb.append("    gracePeriodSeconds: ").append(toIndentedString(gracePeriodSeconds)).append("\n");
    sb.append("    maxRetryAttempts: ").append(toIndentedString(maxRetryAttempts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

